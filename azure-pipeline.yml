trigger:
  branches:
    include:
    - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  inactiveColor: 'green'

stages:
- stage: Deploy
  jobs:
    - job: DeployStaticSite
      steps:
      - checkout: self
      
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'R_AzureSN' # Ensure this is the name of your Azure service connection
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment group create --resource-group R_TRG --template-file main.bicep --parameters deploymentColor=$(inactiveColor)

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'R_AzureSN'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az network traffic-manager endpoint list --resource-group R_TRG --profile-name RTFM     

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'R_AzureSN'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az network traffic-manager endpoint create \
                --resource-group R_TRG \
                --profile-name RTFM \
                --type azureEndpoints \
                --name mystaticwebsite-$(inactiveColor)-endpoint \
                --target-resource-id $(resourceId $(resourceGroup R_TRG) Microsoft.Storage/storageAccounts mystaticwebsite-$(inactiveColor)) \
                --endpoint-status enabled
      
      
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'R_AzureSN'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az network traffic-manager endpoint update \
                --resource-group R_TRG \
                --profile-name RTFM \
                --name mystaticwebsite-$(inactiveColor)-endpoint \
                --type azureEndpoints \
                --target-resource-id $(resourceId $(resourceGroup R_TRG) Microsoft.Storage/storageAccounts mystaticwebsite-$(inactiveColor))
            
      - task: AzureFileCopy@4
        inputs:
           sourcePath: 'website/' 
           azureSubscription: 'R_AzureSN'
           destination: 'AzureBlob'
           storage: storageAccountName
           containerName: '$web'

      - powershell: |
          Install-Module -Name Pester -Force -Scope CurrentUser
          Invoke-Pester -Script ./ptests.ps1
        displayName: 'Run Pester Tests'
